<launch>
    <arg name="run_as_remote" default="false"/>
    <arg name="viz_type" default="local"/>

    <param name="car_context" value="real"/>

    <include file="$(find auto_rc_car_description)/launch/viz_car_$(arg viz_type).launch"/>

	
    <include file="$(find sensor_wrappers)/launch/astra.launch">
    </include>

    <include file="$(find sensor_wrappers)/launch/lidar.launch">
	<arg name="frame_id" value="hoyuko_laser_link"/>
    </include>


	<arg name="robot_parameter" default="robot_description"/>
<param name="$(arg robot_parameter)" command="$(find xacro)/xacro --inorder $(find auto_rc_car_description)/urdf/car_base.urdf.xacro "/>

	    <!--<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />-->

	    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen" >
		<remap from="/joint_states" to="/racecar/internal/joint_states" />
	    </node>

	<node name="fake_joint_states" pkg="auto_rc_car_control" type="fake_joint_state_publisher.py"/>
    


<node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="0 0 0 0 0 0 1 chassis_link camera 100" />

<node pkg="tf" type="static_transform_publisher" name="link2_broadcaster" args="0 0 0 -1.5707 0 -1.5707 camera stereo_camera_depth_optical_frame 100" />


    <!--<node name="client" pkg="auto_rc_car_demos" type="simple_lane_drive.py"/>-->
    <group if="$(arg run_as_remote)">
        <node name="core" pkg="auto_rc_car_api" type="car_core_node.py" output="screen" >
        	<remap from="/racecar/internal/speed_controller/command" to="/commands/motor/current"/>
		<remap from="/racecar/internal/steering_controller/command" to="/commands/servo/position"/>
        </node>
        <param name="client_comm_type" value="remote"/>
    </group>
    
    <group unless="$(arg run_as_remote)">
        <param name="client_comm_type" value="local"/>
    </group>

  <arg name="vesc_config" default="$(find auto_rc_car_api)/config/vesc.yaml" />
  <rosparam file="$(arg vesc_config)" command="load" />
  <node pkg="vesc_driver" type="vesc_driver_node" name="vesc_driver" />

</launch>

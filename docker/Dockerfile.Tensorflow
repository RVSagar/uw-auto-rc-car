FROM uw_rc_car:base

# virtualgl installation
# RUN wget https://sourceforge.net/projects/virtualgl/files/2.6.4/virtualgl_2.6.4_amd64.deb && \
#     apt-get update && \
#     apt-get install -y --no-install-recommends libxtst6 && \
#     dpkg -i virtualgl_2.6.4_amd64.deb

# cuda installation
ENV DEBIAN_FRONTEND noninteractive
RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub && \
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-10-0_10.0.130-1_amd64.deb && \
    apt-get install ./cuda-10-0_10.0.130-1_amd64.deb && \
    wget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb && \
    apt-get install ./nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    cuda-10-0 \
    libcudnn7=7.6.5.32-1+cuda10.0 \
    libcudnn7-dev=7.6.5.32-1+cuda10.0 && \
    apt-get install -y --no-install-recommends \
    libnvinfer6=6.0.1-1+cuda10.0 \
    libnvinfer-dev=6.0.1-1+cuda10.0 \
    libnvinfer-plugin6=6.0.1-1+cuda10.0 && \
    rm -rf /var/lib/apt/lists/*

# tensorflow installation
RUN python -m pip install pip -U && \
    python -m pip install setuptools pyasn1 -U && \
    python -m pip install tensorflow

# install the frame buffer, DE, and VNC server
# RUN apt-get update && \
#     apt-get install -y --no-install-recommends \
#     xvfb xfce4 xfce4-goodies x11vnc && \
#     rm -rf /var/lib/apt/lists/*

# TODO: finish up the virtualgl + turbo setup

# start FB, DE, and VNC
# COPY ./docker/entrypoint.sh /
# RUN chmod +x /entrypoint.sh
# ADD ./.bashrc ~/.bashrc
# CMD ["/entrypoint.sh"]

FROM ros:melodic-robot-bionic

# useful utilities
RUN apt-get update && \
    apt-get install -y --no-install-recommends\
      curl \
      wget \
      build-essential \
      cmake \
      software-properties-common \
      psmisc \
      vim \
      gedit \
      sudo \
      python-pip \
      net-tools\
      dnsutils\
      iputils-ping\
      git-all && \
    rm -rf /var/lib/apt/lists/*

# extra melodic utils
RUN apt-get update && \
    apt-get install -y --no-install-recommends\
      python-catkin-tools \
      ros-melodic-gazebo-ros-pkgs \
      ros-melodic-gazebo-ros-control \
      ros-melodic-joint-state-controller \
      ros-melodic-teleop-twist-keyboard \
      ros-melodic-effort-controllers \
      ros-melodic-position-controllers \
      ros-melodic-message-to-tf \
      ros-melodic-rplidar-ros \
      ros-melodic-serial \ 
      ros-melodic-ackermann-msgs \
      ros-melodic-rviz && \
    rm -rf /var/lib/apt/lists/*

# virtualgl installation
# RUN wget https://sourceforge.net/projects/virtualgl/files/2.6.4/virtualgl_2.6.4_amd64.deb && \
#     apt-get update && \
#     apt-get install -y --no-install-recommends libxtst6 && \
#     dpkg -i virtualgl_2.6.4_amd64.deb

# cuda installation
ENV DEBIAN_FRONTEND noninteractive
RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub && \
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-repo-ubuntu1804_10.2.89-1_amd64.deb && \
    dpkg -i cuda-repo-ubuntu1804_10.2.89-1_amd64.deb && \
    wget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb && \
    dpkg -i nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    cuda-10-1 \
    libcudnn7=7.6.5.32-1+cuda10.1 \
    libcudnn7-dev=7.6.5.32-1+cuda10.1 && \
    apt-get install -y --no-install-recommends \
    libnvinfer6=6.0.1-1+cuda10.1 \
    libnvinfer-dev=6.0.1-1+cuda10.1 \
    libnvinfer-plugin6=6.0.1-1+cuda10.1 && \
    rm -rf /var/lib/apt/lists/*

# tensorflow installation
RUN python -m pip install pip -U && \
    python -m pip install setuptools pyasn1 -U && \
    python -m pip install tensorflow

# install the frame buffer, DE, and VNC server
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    xvfb xfce4 xfce4-goodies x11vnc && \
    rm -rf /var/lib/apt/lists/*

# TODO: finish up the virtualgl + turbo setup

# start FB, DE, and VNC
COPY ./docker/entrypoint.sh /
RUN chmod +x /entrypoint.sh
ADD ./.bashrc ~/.bashrc
CMD ["/entrypoint.sh"]
